(in-package #:cl-user)
(defpackage expression-tests
  (:use :cl :prove :serapeum :cl-ds :iterate :alexandria)
  (:shadowing-import-from :iterate :collecting :summing :in))
(in-package #:expression-tests)

(plan 2)
(let ((data nil)
      (expression (cl-ds:xpr (:iteration 1)
                    (when (< iteration 5)
                      (send-recur iteration :iteration (1+ iteration))))))
  (cl-ds:traverse (lambda (x) (push x data))
                  expression)
  (is data '(4 3 2 1) :test #'equal)
  (setf data nil)
  (iterate
    (for (values value not-finished) = (funcall expression))
    (while not-finished)
    (push value data))
  (is data '(4 3 2 1) :test #'equal))
(finalize)
